diff -up scribus-1.5.4/scribus/plugins/import/pdf/slaoutput.cpp.omv~ scribus-1.5.4/scribus/plugins/import/pdf/slaoutput.cpp
--- scribus-1.5.4/scribus/plugins/import/pdf/slaoutput.cpp.omv~	2019-02-12 14:06:32.701982499 +0100
+++ scribus-1.5.4/scribus/plugins/import/pdf/slaoutput.cpp	2019-02-12 14:07:04.668618223 +0100
@@ -2438,7 +2438,7 @@ void SlaOutputDev::drawImageMask(GfxStat
 	int x, y, i, bit;
 	unsigned char *dest = 0;
 	unsigned char *buffer;
-	Guchar *pix;
+	unsigned char *pix;
 	ImageStream * imgStr = new ImageStream(str, width, 1, 1);
 	imgStr->reset();
 #ifdef WORDS_BIGENDIAN
@@ -2605,7 +2605,7 @@ void SlaOutputDev::drawSoftMaskedImage(G
 	for (int y = 0; y < height; y++)
 	{
 		dest = (unsigned int *)(buffer + y * 4 * width);
-		Guchar * pix = imgStr->getLine();
+		unsigned char * pix = imgStr->getLine();
 		colorMap->getRGBLine(pix, dest, width);
 	}
 	image = new QImage(buffer, width, height, QImage::Format_RGB32);
@@ -2618,13 +2618,13 @@ void SlaOutputDev::drawSoftMaskedImage(G
 	}
 	ImageStream *mskStr = new ImageStream(maskStr, maskWidth, maskColorMap->getNumPixelComps(), maskColorMap->getBits());
 	mskStr->reset();
-	Guchar *mdest = 0;
+	unsigned char *mdest = 0;
 	unsigned char * mbuffer = new unsigned char[maskWidth * maskHeight];
 	memset(mbuffer, 0, maskWidth * maskHeight);
 	for (int y = 0; y < maskHeight; y++)
 	{
-		mdest = (Guchar *)(mbuffer + y * maskWidth);
-		Guchar * pix = mskStr->getLine();
+		mdest = (unsigned char *)(mbuffer + y * maskWidth);
+		unsigned char * pix = mskStr->getLine();
 		maskColorMap->getGrayLine(pix, mdest, maskWidth);
 	}
 	if ((maskWidth != width) || (maskHeight != height))
@@ -2747,7 +2747,7 @@ void SlaOutputDev::drawMaskedImage(GfxSt
 	for (int y = 0; y < height; y++)
 	{
 		dest = (unsigned int *)(buffer + y * 4 * width);
-		Guchar * pix = imgStr->getLine();
+		unsigned char * pix = imgStr->getLine();
 		colorMap->getRGBLine(pix, dest, width);
 	}
 	image = new QImage(buffer, width, height, QImage::Format_RGB32);
@@ -2760,14 +2760,14 @@ void SlaOutputDev::drawMaskedImage(GfxSt
 	}
 	ImageStream *mskStr = new ImageStream(maskStr, maskWidth, 1, 1);
 	mskStr->reset();
-	Guchar *mdest = 0;
+	unsigned char *mdest = 0;
 	int invert_bit = maskInvert ? 1 : 0;
 	unsigned char * mbuffer = new unsigned char[maskWidth * maskHeight];
 	memset(mbuffer, 0, maskWidth * maskHeight);
 	for (int y = 0; y < maskHeight; y++)
 	{
-		mdest = (Guchar *)(mbuffer + y * maskWidth);
-		Guchar * pix = mskStr->getLine();
+		mdest = (unsigned char *)(mbuffer + y * maskWidth);
+		unsigned char * pix = mskStr->getLine();
 		for (int x = 0; x < maskWidth; x++)
 		{
 			if (pix[x] ^ invert_bit)
@@ -2898,7 +2898,7 @@ void SlaOutputDev::drawImage(GfxState *s
 		for (int y = 0; y < height; y++)
 		{
 			QRgb *s = (QRgb*)(image->scanLine(y));
-			Guchar *pix = imgStr->getLine();
+			unsigned char *pix = imgStr->getLine();
 			for (int x = 0; x < width; x++)
 			{
 				GfxRGB rgb;
@@ -2926,7 +2926,7 @@ void SlaOutputDev::drawImage(GfxState *s
 		for (int y = 0; y < height; y++)
 		{
 			QRgb *s = (QRgb*)(image->scanLine(y));
-			Guchar *pix = imgStr->getLine();
+			unsigned char *pix = imgStr->getLine();
 			for (int x = 0; x < width; x++)
 			{
 				if (colorMap->getNumPixelComps() == 4)
@@ -3477,7 +3477,7 @@ void SlaOutputDev::updateFont(GfxState *
 				if (n) {
 					codeToGID = (int *)gmallocn(n, sizeof(int));
 					memcpy(codeToGID, ((GfxCIDFont *)gfxFont)->getCIDToGID(),
-					n * sizeof(Gushort));
+					n * sizeof(unsigned short));
 				}
 			} else {
 				if (fileName)
@@ -3552,7 +3552,7 @@ void SlaOutputDev::updateFont(GfxState *
 	GooString *fileName;
 	char *tmpBuf;
 	int tmpBufLen;
-	Gushort *codeToGID;
+	unsigned short *codeToGID;
 	DisplayFontParam *dfp;
 	double *textMat;
 	double m11, m12, m21, m22, fontSize;
@@ -3689,8 +3689,8 @@ void SlaOutputDev::updateFont(GfxState *
 				n = ((GfxCIDFont *)gfxFont)->getCIDToGIDLen();
 				if (n)
 				{
-					codeToGID = (Gushort *)gmallocn(n, sizeof(Gushort));
-					memcpy(codeToGID, ((GfxCIDFont *)gfxFont)->getCIDToGID(), n * sizeof(Gushort));
+					codeToGID = (unsigned short *)gmallocn(n, sizeof(unsigned short));
+					memcpy(codeToGID, ((GfxCIDFont *)gfxFont)->getCIDToGID(), n * sizeof(unsigned short));
 				}
 			}
 			else
@@ -3768,7 +3768,7 @@ void SlaOutputDev::drawChar(GfxState *st
 			qPath.setFillRule(Qt::WindingFill);
 			for (int i = 0; i < fontPath->getLength(); ++i)
 			{
-				Guchar f;
+				unsigned char f;
 				fontPath->getPoint(i, &x1, &y1, &f);
 				if (f & splashPathFirst)
 					qPath.moveTo(x1,y1);
diff -up scribus-1.5.4/scribus/plugins/import/pdf/slaoutput.h.omv~ scribus-1.5.4/scribus/plugins/import/pdf/slaoutput.h
--- scribus-1.5.4/scribus/plugins/import/pdf/slaoutput.h.omv~	2019-02-12 14:05:55.846212161 +0100
+++ scribus-1.5.4/scribus/plugins/import/pdf/slaoutput.h	2019-02-12 14:05:58.167261906 +0100
@@ -28,7 +28,6 @@ for which a new license (GPL+exception)
 #include "selection.h"
 #include "vgradient.h"
 
-#include <poppler/goo/gtypes.h>
 #include <poppler/Object.h>
 #include <poppler/OutputDev.h>
 #include <poppler/Gfx.h>
