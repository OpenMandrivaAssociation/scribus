diff -up scribus-1.5.5/build/scribus/plugins/import/pdf/slaoutput.h.omv~ scribus-1.5.5/build/scribus/plugins/import/pdf/slaoutput.h
diff -up scribus-1.5.5/scribus/plugins/import/pdf/importpdf.cpp.omv~ scribus-1.5.5/scribus/plugins/import/pdf/importpdf.cpp
--- scribus-1.5.5/scribus/plugins/import/pdf/importpdf.cpp.omv~	2020-01-28 18:47:59.176196348 +0100
+++ scribus-1.5.5/scribus/plugins/import/pdf/importpdf.cpp	2020-01-28 18:53:04.320181543 +0100
@@ -6,6 +6,7 @@ for which a new license (GPL+exception)
 */
 
 #include <cstdlib>
+#include <memory>
 
 #include <QByteArray>
 #include <QCursor>
@@ -75,7 +76,7 @@ PdfPlug::PdfPlug(ScribusDoc* doc, int fl
 QImage PdfPlug::readThumbnail(const QString& fName)
 {
 	QString pdfFile = QDir::toNativeSeparators(fName);
-	globalParams = new GlobalParams();
+	globalParams = std::make_unique<GlobalParams>();
 	if (globalParams)
 	{
 #if defined(Q_OS_WIN32) && POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 62, 0)
@@ -90,7 +91,6 @@ QImage PdfPlug::readThumbnail(const QStr
 			if (pdfDoc->getErrorCode() == errEncrypted)
 			{
 				delete pdfDoc;
-				delete globalParams;
 				return QImage();
 			}
 			if (pdfDoc->isOk())
@@ -134,11 +134,9 @@ QImage PdfPlug::readThumbnail(const QStr
 				image.setText("YSize", QString("%1").arg(h));
 				delete dev;
 				delete pdfDoc;
-				delete globalParams;
 				return image;
 			}
 			delete pdfDoc;
-			delete globalParams;
 		}
 	}
 	return QImage();
@@ -387,7 +385,7 @@ bool PdfPlug::convert(const QString& fn)
 		qApp->processEvents();
 	}
 
-	globalParams = new GlobalParams();
+	globalParams = std::make_unique<GlobalParams>();
 	GooString *userPW = nullptr;
 	if (globalParams)
 	{
@@ -429,7 +427,6 @@ bool PdfPlug::convert(const QString& fn)
 					if (progressDialog)
 						progressDialog->close();
 					delete pdfDoc;
-					delete globalParams;
 					return false;
 				}
 				if (progressDialog)
@@ -474,7 +471,6 @@ bool PdfPlug::convert(const QString& fn)
 							progressDialog->close();
 						delete optImp;
 						delete pdfDoc;
-						delete globalParams;
 						return false;
 					}
 					pageString = optImp->getPagesString();
@@ -908,8 +904,6 @@ bool PdfPlug::convert(const QString& fn)
 		}
 		delete pdfDoc;
 	}
-	delete globalParams;
-	globalParams = nullptr;
 
 //	qDebug() << "converting finished";
 //	qDebug() << "Imported" << Elements.count() << "Elements";
diff -up scribus-1.5.5/scribus/plugins/import/pdf/slaoutput.cpp.omv~ scribus-1.5.5/scribus/plugins/import/pdf/slaoutput.cpp
--- scribus-1.5.5/scribus/plugins/import/pdf/slaoutput.cpp.omv~	2020-01-28 18:42:14.775213057 +0100
+++ scribus-1.5.5/scribus/plugins/import/pdf/slaoutput.cpp	2020-01-28 18:46:47.179199841 +0100
@@ -1229,7 +1229,7 @@ void SlaOutputDev::startDoc(PDFDoc *doc,
 	globalParams->getEnableT1lib(),
 #endif
 #if HAVE_FREETYPE_H
-	globalParams->getEnableFreeType(),
+	true /*globalParams->getEnableFreeType()*/,
 	true,
 	true,
 #endif
@@ -2784,7 +2784,7 @@ void SlaOutputDev::drawMaskedImage(GfxSt
 	delete[] mbuffer;
 }
 
-void SlaOutputDev::drawImage(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, GBool interpolate, int *maskColors, GBool inlineImg)
+void SlaOutputDev::drawImage(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, GBool interpolate, const int *maskColors, GBool inlineImg)
 {
 	ImageStream * imgStr = new ImageStream(str, width, colorMap->getNumPixelComps(), colorMap->getBits());
 //	qDebug() << "Image Components" << colorMap->getNumPixelComps() << "Mask" << maskColors;
@@ -3365,7 +3365,7 @@ err1:
 		fontsrc->unref();
 }
 
-void SlaOutputDev::drawChar(GfxState *state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, Unicode *u, int uLen)
+void SlaOutputDev::drawChar(GfxState *state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, const Unicode *u, int uLen)
 {
 	double x1, y1, x2, y2;
 	int render;
@@ -3452,7 +3452,7 @@ void SlaOutputDev::drawChar(GfxState *st
 	}
 }
 
-GBool SlaOutputDev::beginType3Char(GfxState *state, double x, double y, double dx, double dy, CharCode code, Unicode *u, int uLen)
+GBool SlaOutputDev::beginType3Char(GfxState *state, double x, double y, double dx, double dy, CharCode code, const Unicode *u, int uLen)
 {
 //	qDebug() << "beginType3Char";
 	GfxFont *gfxFont;
@@ -3705,7 +3705,7 @@ QString SlaOutputDev::getAnnotationColor
 	return fNam;
 }
 
-QString SlaOutputDev::convertPath(GfxPath *path)
+QString SlaOutputDev::convertPath(const GfxPath *path)
 {
 	if (! path)
 		return QString();
@@ -3715,7 +3715,7 @@ QString SlaOutputDev::convertPath(GfxPat
 
 	for (int i = 0; i < path->getNumSubpaths(); ++i)
 	{
-		GfxSubpath * subpath = path->getSubpath(i);
+		const GfxSubpath * subpath = path->getSubpath(i);
 		if (subpath->getNumPoints() > 0)
 		{
 			output += QString("M %1 %2").arg(subpath->getX(0)).arg(subpath->getY(0));
diff -up scribus-1.5.5/scribus/plugins/import/pdf/slaoutput.h.omv~ scribus-1.5.5/scribus/plugins/import/pdf/slaoutput.h
--- scribus-1.5.5/scribus/plugins/import/pdf/slaoutput.h.omv~	2020-01-28 18:38:16.652224610 +0100
+++ scribus-1.5.5/scribus/plugins/import/pdf/slaoutput.h	2020-01-28 18:46:05.291201873 +0100
@@ -229,7 +229,7 @@ public:
 
 	//----- image drawing
 	void drawImageMask(GfxState *state, Object *ref, Stream *str, int width, int height, GBool invert, GBool interpolate, GBool inlineImg) override;
-	void drawImage(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, GBool interpolate, int *maskColors, GBool inlineImg) override;
+	void drawImage(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, GBool interpolate, const int *maskColors, GBool inlineImg) override;
 	void drawSoftMaskedImage(GfxState *state, Object *ref, Stream *str,
 				   int width, int height,
 				   GfxImageColorMap *colorMap,
@@ -261,8 +261,8 @@ public:
 	//----- text drawing
 	void  beginTextObject(GfxState *state) override;
 	void  endTextObject(GfxState *state) override;
-	void  drawChar(GfxState *state, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, double /*originX*/, double /*originY*/, CharCode /*code*/, int /*nBytes*/, Unicode * /*u*/, int /*uLen*/) override;
-	GBool beginType3Char(GfxState * /*state*/, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, CharCode /*code*/, Unicode * /*u*/, int /*uLen*/) override;
+	void  drawChar(GfxState *state, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, double /*originX*/, double /*originY*/, CharCode /*code*/, int /*nBytes*/, const Unicode * /*u*/, int /*uLen*/) override;
+	GBool beginType3Char(GfxState * /*state*/, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, CharCode /*code*/, const Unicode * /*u*/, int /*uLen*/) override;
 	void  endType3Char(GfxState * /*state*/) override;
 	void  type3D0(GfxState * /*state*/, double /*wx*/, double /*wy*/) override;
 	void  type3D1(GfxState * /*state*/, double /*wx*/, double /*wy*/, double /*llx*/, double /*lly*/, double /*urx*/, double /*ury*/) override;
@@ -282,7 +282,7 @@ private:
 	void getPenState(GfxState *state);
 	QString getColor(GfxColorSpace *color_space, POPPLER_CONST_070 GfxColor *color, int *shade);
 	QString getAnnotationColor(const AnnotColor *color);
-	QString convertPath(GfxPath *path);
+	QString convertPath(const GfxPath *path);
 	int getBlendMode(GfxState *state);
 	void applyMask(PageItem *ite);
 	void pushGroup(const QString& maskName = "", GBool forSoftMask = gFalse, GBool alpha = gFalse, bool inverted = false);
diff -up scribus-1.5.5/scribus/plugins/scriptplugin/objimageexport.cpp.omv~ scribus-1.5.5/scribus/plugins/scriptplugin/objimageexport.cpp
--- scribus-1.5.5/scribus/plugins/scriptplugin/objimageexport.cpp.omv~	2020-01-29 01:24:17.891042693 +0100
+++ scribus-1.5.5/scribus/plugins/scriptplugin/objimageexport.cpp	2020-01-29 01:33:35.625015634 +0100
@@ -221,7 +221,7 @@ PyTypeObject ImageExport_Type = {
 	sizeof(ImageExport),   // int tp_basicsize, /* For allocation */
 	0,  // int tp_itemsize; /* For allocation */
 	(destructor) ImageExport_dealloc, //	 destructor tp_dealloc;
-	nullptr, //	 printfunc tp_print;
+	0,       //      tp_vectorcall_offset
 	nullptr, //	 getattrfunc tp_getattr;
 	nullptr, //	 setattrfunc tp_setattr;
 	nullptr, //	 cmpfunc tp_compare;
@@ -264,6 +264,10 @@ PyTypeObject ImageExport_Type = {
 	nullptr, //	 destructor tp_del;
 	0, //	 unsigned int tp_version_tag;
 	0, //	 destructor tp_finalize;
+	0, // tp_vectorcall
+#if PY_VERSION_HEX < 0x03090000
+	nullptr, // tp_print
+#endif
 
 #ifdef COUNT_ALLOCS
 	/* these must be last and never explicitly initialized */
diff -up scribus-1.5.5/scribus/plugins/scriptplugin/objpdffile.cpp.omv~ scribus-1.5.5/scribus/plugins/scriptplugin/objpdffile.cpp
--- scribus-1.5.5/scribus/plugins/scriptplugin/objpdffile.cpp.omv~	2020-01-29 01:37:45.954003489 +0100
+++ scribus-1.5.5/scribus/plugins/scriptplugin/objpdffile.cpp	2020-01-29 01:38:30.028001351 +0100
@@ -1555,7 +1555,7 @@ PyTypeObject PDFfile_Type = {
 	/* Methods to implement standard operations */
 
 	(destructor) PDFfile_dealloc, //     destructor tp_dealloc;
-	nullptr, //     printfunc tp_print;
+	0, // tp_vectorcall_offset
 	nullptr, //     getattrfunc tp_getattr;
 	nullptr, //     setattrfunc tp_setattr;
 	nullptr, //     cmpfunc tp_compare;
@@ -1624,6 +1624,10 @@ PyTypeObject PDFfile_Type = {
 	nullptr, //     destructor tp_del;
 	0, //	 unsigned int tp_version_tag;
 	0, //	 destructor tp_finalize;
+	nullptr, //     tp_vectorcall
+#if PY_VERSION_HEX < 0x0309000
+	nullptr, //     printfunc tp_print;
+#endif
 
 #ifdef COUNT_ALLOCS
 	/* these must be last and never explicitly initialized */
diff -up scribus-1.5.5/scribus/plugins/scriptplugin/objprinter.cpp.omv~ scribus-1.5.5/scribus/plugins/scriptplugin/objprinter.cpp
--- scribus-1.5.5/scribus/plugins/scriptplugin/objprinter.cpp.omv~	2020-01-29 01:35:53.392008950 +0100
+++ scribus-1.5.5/scribus/plugins/scriptplugin/objprinter.cpp	2020-01-29 01:36:44.585006466 +0100
@@ -517,7 +517,7 @@ PyTypeObject Printer_Type = {
 	/* Methods to implement standard operations */
 
 	(destructor) Printer_dealloc, //     destructor tp_dealloc;
-	nullptr, //     printfunc tp_print;
+	0, // tp_vectorcall_offset
 	nullptr, //     getattrfunc tp_getattr;
 	nullptr, //     setattrfunc tp_setattr;
 	nullptr, //     cmpfunc tp_compare;
@@ -586,6 +586,10 @@ PyTypeObject Printer_Type = {
 	nullptr, //     destructor tp_del;
 	0, //	 unsigned int tp_version_tag;
 	0, //	 destructor tp_finalize;
+	nullptr, //     tp_vectorcall
+#if PY_VERSION_HEX < 0x03090000
+	nullptr, //     printfunc tp_print;
+#endif
 
 #ifdef COUNT_ALLOCS
 	/* these must be last and never explicitly initialized */
